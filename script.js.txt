// script.js
const data = [
    { year: 2012, model: "AlexNet", compute: 0.0000012, color: "#74b9ff" },
    { year: 2015, model: "ResNet", compute: 0.000036, color: "#0984e3" },
    { year: 2017, model: "Transformer", compute: 0.000300, color: "#6c5ce7" },
    { year: 2018, model: "BERT", compute: 0.000512, color: "#a29bfe" },
    { year: 2019, model: "GPT-2", compute: 0.042000, color: "#fd79a8" },
    { year: 2020, model: "GPT-3", compute: 3.640000, color: "#e84393" },
    { year: 2022, model: "PaLM", compute: 2.500000, color: "#e17055" },
    { year: 2023, model: "GPT-4", compute: 8.000000, color: "#d63031" }
];

function createVisualization() {
    const width = 1000;
    const height = 600;
    const margin = { top: 50, right: 50, bottom: 50, left: 80 };

    const svg = d3.select("#visualization")
        .append("svg")
        .attr("width", width)
        .attr("height", height);

    const x = d3.scaleLinear()
        .domain([2012, 2023])
        .range([margin.left, width - margin.right]);

    const y = d3.scaleLog()
        .domain([1e-7, 10])
        .range([height - margin.bottom, margin.top]);

    // Add X axis
    svg.append("g")
        .attr("transform", `translate(0,${height - margin.bottom})`)
        .call(d3.axisBottom(x).tickFormat(d3.format("d")));

    // Add Y axis
    svg.append("g")
        .attr("transform", `translate(${margin.left},0)`)
        .call(d3.axisLeft(y));

    // Add bubbles
    const bubbles = svg.selectAll("circle")
        .data(data)
        .enter()
        .append("circle")
        .attr("class", "bubble")
        .attr("cx", d => x(d.year))
        .attr("cy", d => y(d.compute))
        .attr("r", 0)
        .attr("fill", d => d.color)
        .on("mouseover", function(event, d) {
            d3.select(this)
                .transition()
                .duration(200)
                .attr("r", d => Math.sqrt(d.compute) * 20 + 10);

            tooltip.transition()
                .duration(200)
                .style("opacity", .9);
            tooltip.html(`${d.model}<br/>Compute: ${d.compute} petaflop/s-days`)
                .style("left", (event.pageX) + "px")
                .style("top", (event.pageY - 28) + "px");
        })
        .on("mouseout", function(event, d) {
            d3.select(this)
                .transition()
                .duration(200)
                .attr("r", d => Math.sqrt(d.compute) * 20);

            tooltip.transition()
                .duration(500)
                .style("opacity", 0);
        });

    // Add tooltip
    const tooltip = d3.select("body").append("div")
        .attr("class", "tooltip")
        .style("opacity", 0);

    // Animation
    function animateBubbles() {
        bubbles.transition()
            .duration(1000)
            .attr("r", d => Math.sqrt(d.compute) * 20);
    }

    d3.select("#playButton").on("click", animateBubbles);
}

createVisualization();